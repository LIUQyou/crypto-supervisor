# ────────────────────────────────────────────────────────────────────
# Exchange & stream configuration
# ────────────────────────────────────────────────────────────────────
exchanges:
  binance:
    symbols: [BTC/USDT, ETH/USDT]
    streams: [ticker, aggTrade, depth]   # add / remove as you like
    reconnect_delay: 5                  # base seconds for back‑off

# If you later add another connector file (coinbase.py, kraken.py, …)
# just drop it in the same structure:
#  coinbase:
#    symbols: [BTC-USD, ETH-USD]
#    reconnect_delay: 5

# ────────────────────────────────────────────────────────────────────
# Alert configuration
# ────────────────────────────────────────────────────────────────────
alerts:
  # -------- Spread / liquidity alert ------------------------------
  spread:
    threshold_bps: 30        # widen > 30 bp
    window_ms:     10000     # look at last 10 s of depth data
    cooldown_ms:   600000    # 10 min

  # -------- Buy‑vs‑sell flow alert --------------------------------
  flow:
    threshold:     0.60      # 60 % signed‑notional imbalance
    window_ms:     180000    # 3‑minute rolling window (was 3 buckets×1 min)
    min_notional:  100000    # ignore if < $100k traded in window
    cooldown_ms:   600000    # 10 min

  # -------- Order‑book queue‑imbalance alert ----------------------
  queue:
    threshold: 0.7           # |imbalance| ≥ 70 %
    window_ms: 3000          # over 3 seconds
    cooldown_ms: 600000      # 10‑minute silence

  # -------- SMTP settings -----------------------------------------
  email:
      smtp_host: smtp.gmail.com
      smtp_port: 465
      username: xx@gmail.com
      password: xx
      from_addr: xx@gmail.com
      to_addrs:
        - xx@gmail.com
        - xx@gmail.com

# ────────────────────────────────────────────────────────────────────
# Storage backend
#   "memory" – keep everything in‑process RAM (default)
#   "redis"  – keep hot window in RAM, evict cold entries to Redis
# ────────────────────────────────────────────────────────────────────
# ───────────────────────────────────────────────────────────
# Storage configuration
#   backend:
#     "memory" – keep everything in‑process RAM
#     "redis"  – keep hot window in RAM; spill cold keys to Redis
#   sink:
#     Optional on‑disk file writer (CSV/Parquet) for offline analysis
# ───────────────────────────────────────────────────────────
storage:
  # —— live key‑value store used by the alerting pipeline ——
  backend: redis                         # choose "memory" or "redis"
  redis_url: redis://localhost:6379/0    # Redis connection string
  max_memory_gb: 8                       # soft RSS limit before spill
  hot_window_hours: 24                   # keep last 24 h in RAM

  # —— optional FileSink for raw‑tick archiving ——
  sink:
    base_dir: "ticks"                    # root folder for output files
    fmt: "parquet"                       # or "csv"
    rotate_minutes: 60                   # roll a new file every 5 min
    max_rows: 0                          # flush earlier if buffer >20 k rows
    compression: "zstd"                  # Parquet compression codec

